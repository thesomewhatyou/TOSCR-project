

name: Publish Modpack to Modrinth & CurseForge

on:
  release:
    types: [published] # This workflow runs when a new GitHub Release is published
  workflow_dispatch: # Allows manual triggering from GitHub Actions tab

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to download release assets using GITHUB_TOKEN

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- MODIFICATION START ---
      # This step downloads the .mrpack and .zip files that you attach to your GitHub Release.
      # They will be downloaded into the current working directory of the runner.
      - name: Download .mrpack release asset
        uses: robinraju/release-assets@v4
        with:
          # This pattern matches any file ending with .mrpack in the release assets
          pattern: "*.mrpack"
          # The tag of the current release
          tag: ${{ github.ref_name }}
          # Use the default GITHUB_TOKEN to authenticate for downloading assets
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download .zip release asset
        uses: robinraju/release-assets@v4
        with:
          # This pattern matches any file ending with .zip in the release assets
          pattern: "*.zip"
          # The tag of the current release
          tag: ${{ github.ref_name }}
          # Use the default GITHUB_TOKEN to authenticate for downloading assets
          token: ${{ secrets.GITHUB_TOKEN }}
      # --- MODIFICATION END ---

      - name: Find Modpack Files
        id: find_files # Gives us an output variable
        run: |
          # Locate the .mrpack file (now downloaded to the current directory)
          MRPACK_FILE=$(find . -name "*.mrpack" -print -quit)
          if [ -z "$MRPACK_FILE" ]; then
            echo "::error::No .mrpack file found after downloading release assets."
            exit 1
          fi
          echo "Found .mrpack: $MRPACK_FILE"
          echo "mrpack_path=$MRPACK_FILE" >> $GITHUB_OUTPUT

          # Locate the .zip file (now downloaded to the current directory)
          ZIP_FILE=$(find . -name "*.zip" -print -quit)
          if [ -z "$ZIP_FILE" ]; then
            echo "::error::No .zip file found after downloading release assets."
            exit 1
          fi
          echo "Found .zip: $ZIP_FILE"
          echo "zip_path=$ZIP_FILE" >> $GITHUB_OUTPUT

      - name: Publish to Modrinth and CurseForge
        uses: Kir-Antipov/mc-publish@v3.3 # Use the latest version for best compatibility
        with:
          # Common Settings
          name: "My Awesome Modpack v${{ github.ref_name }}" # Uses the Git tag name for the release name
          version: ${{ github.ref_name }} # Uses the Git tag name as the version
          changelog: |
            # Release Notes for ${{ github.ref_name }}
            ${{ github.event.release.body || 'No release body provided.' }} # Use GitHub Release Notes

          # Modrinth Specifics
          modrinth-id: GVUVZHm8 # REPLACE with your Modrinth Modpack Project ID
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          modrinth-files: ${{ steps.find_files.outputs.mrpack_path }} # Path to your .mrpack file
          modrinth-featured: true # Set to true to feature this version on Modrinth

          # CurseForge Specifics
          curseforge-id: 1205871 # REPLACE with your CurseForge Modpack Project ID
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
          curseforge-files: ${{ steps.find_files.outputs.zip_path }} # Path to your .zip file

          # Modpack specific metadata (adjust as needed for your pack)
          loaders: "fabric" # e.g., "fabric", "forge", "quilt", "neoforge", etc.
          game-versions: "1.21.4" # Compatible Minecraft versions for your pack
          # java-versions: "17" # If your pack requires a specific Java version
          # Add any other relevant mc-publish options here, such as dependencies, warning messages etc.
